<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[shiro原理及其运行流程介绍]]></title>
    <url>%2F2016%2F04%2F07%2Fshiro%E5%8E%9F%E7%90%86%E5%8F%8A%E5%85%B6%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[什么是shiro&nbsp;shiro是apache的一个开源框架，是一个权限管理的框架，实现 用户认证、用户授权。&nbsp;spring中有spring security (原名Acegi)，是一个权限框架，它和spring依赖过于紧密，没有shiro使用简单。shiro不依赖于spring，shiro不仅可以实现 web应用的权限管理，还可以实现c/s系统，分布式系统权限管理，shiro属于轻量框架，越来越多企业项目开始使用shiro。&nbsp;使用shiro实现系统的权限管理，有效提高开发效率，从而降低开发成本。&nbsp;shiro架构&nbsp;&nbsp;&nbsp;subject：主体，可以是用户也可以是程序，主体要访问系统，系统需要对主体进行认证、授权。&nbsp;securityManager：安全管理器，主体进行认证和授权都是通过securityManager进行。&nbsp;authenticator：认证器，主体进行认证最终通过authenticator进行的。&nbsp;authorizer：授权器，主体进行授权最终通过authorizer进行的。&nbsp;sessionManager：web应用中一般是用web容器对session进行管理，shiro也提供一套session管理的方式。SessionDao：&nbsp; 通过SessionDao管理session数据，针对个性化的session数据存储需要使用sessionDao。&nbsp;cache Manager：缓存管理器，主要对session和授权数据进行缓存，比如将授权数据通过cacheManager进行缓存管理，和ehcache整合对缓存数据进行管理。&nbsp;realm：域，领域，相当于数据源，通过realm存取认证、授权相关数据。&nbsp;注意：在realm中存储授权和认证的逻辑。&nbsp;cryptography：密码管理，提供了一套加密/解密的组件，方便开发。比如提供常用的散列、加/解密等功能。比如 md5散列算法。认证过程&nbsp; 认证执行流程1、通过ini配置文件创建securityManager2、调用subject.login方法主体提交认证，提交的token3、securityManager进行认证，securityManager最终由ModularRealmAuthenticator进行认证。4、ModularRealmAuthenticator调用IniRealm(给realm传入token) 去ini配置文件中查询用户信息5、IniRealm根据输入的token（UsernamePasswordToken）从 shiro.ini查询用户信息，根据账号查询用户信息（账号和密码）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果查询到用户信息，就给ModularRealmAuthenticator返回用户信息（账号和密码）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果查询不到，就给ModularRealmAuthenticator返回null6、ModularRealmAuthenticator接收IniRealm返回Authentication认证信息&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果返回的认证信息是null，ModularRealmAuthenticator抛出异常（org.apache.shiro.authc.UnknownAccountException）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果返回的认证信息不是null（说明inirealm找到了用户），对IniRealm返回用户密码 （在ini文件中存在）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 和 token中的密码 进行对比，如果不一致抛出异常（org.apache.shiro.authc.IncorrectCredentialsException）授权流程授权流程&nbsp;1、对subject进行授权，调用方法isPermitted（“permission串“）2、SecurityManager执行授权，通过ModularRealmAuthorizer执行授权3、ModularRealmAuthorizer执行realm（自定义的Realm）从数据库查询权限数据调用realm的授权方法：doGetAuthorizationInfo&nbsp;4、realm从数据库查询权限数据，返回ModularRealmAuthorizer5、ModularRealmAuthorizer调用PermissionResolver进行权限串比对6、如果比对后，isPermitted中“permission串“在realm查询到权限数据中，说明用户访问permission串有权限，否则 没有权限，抛出异常。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Restful风格的springMVC]]></title>
    <url>%2F2016%2F01%2F20%2FRestful%E9%A3%8E%E6%A0%BC%E7%9A%84springMVC%2F</url>
    <content type="text"><![CDATA[一、概念了解REST得知道5个名字：1、资源 Resource资源就是服务器上获取到的东西都可以说是资源，一条用户记录，一个用户的密码，一张图片等等都是2、资源的表述 Representation就是资源的格式，是HTML、XML、JSON、纯文本、图片等等，可以用各种各样的格式来表述你获取到的资源，这就是资源的表述3、状态转移 State TransferURL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。操作是动词，资源是名词4、统一接口 Uniform InterfaceREST必须通过统一的接口对资源进行操作，HTTP1.1协议定义了资源的统一接口：·GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS`HTTP &nbsp;HEAD可以自定义·HTTP STATUS响应状态 可自定义·一套标准的内容协商机制·一套标准的缓存机制·一套标准的客户端身份认证机制5、超文本驱动 Hypertext Driven资源之间通过超链接相互关联，超链接代表资源之间的关系，也代表可执行的状态迁移Restful API就是按照REST架构的思想设计出来的API核心就是：将API拆分为逻辑上的资源，这些资源通过http（GET/POST/PUT/DELETE等）被操作SpringMVC的 Restful API二、RESTful简介&nbsp;1.REST架构师一个抽象的概念，目前主要是基于HTTP协议实现，其目的是为了提高系统的可伸缩性，降低应用之间的耦合度，便于框架分布式处理程序。&nbsp;2.REST主要对以下两方面进行了规范-定位资源的URL风格，例如&nbsp;http://baidu.com/admin/1234&nbsp;http://baidu.com/admin/1234/10/11-如何对资源操作&nbsp;采用HTTP协议规定的GET、POST、PUT、DELETE动作处理资源的增删该查操作&nbsp;&nbsp;3.什么是RESTful？&nbsp;-符合REST约束风格和原则的应用程序或设计就是RESTful.&nbsp;eg: &nbsp;/emp/1 &nbsp;HTTP GET &nbsp; &nbsp; &nbsp;查询id=1的emp&nbsp; &nbsp; &nbsp; &nbsp;/emp/1 &nbsp;HTTP DELETE &nbsp; &nbsp;删除id=1的emp,实验中直接删除会报405错误，但是采用$.ajax异步删除就没问题&nbsp; &nbsp; &nbsp; &nbsp;/emp/1 &nbsp;HTTP PUT &nbsp; &nbsp;跟新emp&nbsp; &nbsp; &nbsp; &nbsp;/emp/add &nbsp;HTTP POST &nbsp; &nbsp; 新增emp&nbsp;4.Spring对RESTful的支持- Spring MVC 对 RESTful应用提供了以下支持- 利用@RequestMapping 指定要处理请求的URI模板和HTTP请求的动作类型- 利用@PathVariable讲URI请求模板中的变量映射到处理方法参数上- 利用Ajax,在客户端发出PUT、DELETE动作的请求&nbsp;eg:&nbsp;@RequestMapping(value = “/{id}”, method = RequestMethod.GET)&nbsp; &nbsp; &nbsp; public String toUpdate(@PathVariable(“id”) Integer id, Model model) {}&nbsp;5，RequestMapping的一般应用格式。&nbsp;&nbsp;@RequestMapping(value = “/{id}”, method = RequestMethod.GET)&nbsp;&nbsp;@RequestMapping(value = “/{id}”, method = RequestMethod.POST)&nbsp;&nbsp;@RequestMapping(value = “/{id}”, method = RequestMethod.DELETE) &nbsp; // 因为这个需要Ajax请求，所有返回的是个json&nbsp;@ResponseBody&nbsp;&nbsp;@RequestMapping(value = “/{id}”, method = RequestMethod.PUT)&nbsp;6，客户端发送PUT，DELETE请求&nbsp; 可以采用Ajax方式发送PUT和DELETE请求&nbsp;Java代码&nbsp;&nbsp;$.ajax(&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;:&nbsp;“DELETE”,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;:&nbsp;“/spring_crud_restful/emp/deleteEmp/“&nbsp;+&nbsp;id,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataType&nbsp;:&nbsp;“json”,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success&nbsp;:&nbsp;function(data)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(data);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.href&nbsp;=&nbsp;“/spring_crud_restful/emp/listEmp/1”;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;7，静态资源访问处理采用RESTful架构后，需要将web.xml中控制器拦截的请求设置为/，这样会将css,js等静态资源进行拦截，发送404错误。解决方法：–配置&lt;mvc:resources/&gt;&nbsp;&nbsp;&lt;mvc:resources mapping=”请求URI” location=”资源位置” /&gt;–配置&lt;mvc:default-servlet-handler/&gt;&nbsp;&lt;mvc:default-servlet-handler/&gt;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Restful</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序员的幽默]]></title>
    <url>%2F2016%2F01%2F16%2F%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%B9%BD%E9%BB%98%2F</url>
    <content type="text"><![CDATA[看了这些来自程序员的神回复，你就会明白，程序员是世界上最聪明、最具幽默感的一群人。工作相关0. 如果软件正在占领全世界，为什么程序员得不到尊重？遍身罗绮者，不是养蚕人。1. 中国大陆的盗版Windows系统都是怎么做出来的？复制、粘贴。2. 中国梦和美国梦的区别是什么？中国梦.txt，美国梦.exe3. 请用最简洁的语言描述我国fa lv。7544. 哪种编程能够永生？除非你能一直续。5.怎么翻译Linus Torvalds的这句「Talk is cheap. Show me the code」比较好？屁话少说，放码过来。6. Google Glass的启动命令：OK，Glass，中文翻译为什么最合适？好的，镜哥哥。7. 什么是递归？古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知，致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。8. 你见过最烂的设计是什么？正反面永远一次插不对的 usb 接口设计9. 哪款键盘用起来手感比较好？这款。10. 作为一个程序员，自己的女票比自己代码力强是一种什么样的体验？11. 如果你是图灵测试者，你会问机器什么问题？金坷垃好处都有啥？12. 作为IT人员，你觉得什么工具能大大提高你的工作效率？单身。13. Android上能提高学习、工作效率的应用有哪些？关机。14. 在网吧写代码是怎样一种体验？装完开发环境，重启，没了。15. 为什么很多程序员、geek 都喜欢熬夜，而且在后半夜工作效率异常高？一个姑娘问我，搞学术的为什么都睡得那么晚，难道只有到晚上才有灵感？不是，姑娘，搞学术不靠灵感，靠的是碌碌无为的白天引发的愧疚心。程序员、Geek 们也是这样。16. 单身程序狗解决了一个技术难题后没有妹子可以炫耀或夸一下自己怎么办？现在你明白了吧，为什么那么多程序员要写技术博客。17. 有哪些老鸟程序员知道而新手不知道的小技巧？程序不等于数据结构加算法，而等于搜索引擎加英语。18. 程序员的核心竞争力是什么？为什么？“玩算法的码农，打拼靠蓝条，像是法师。数学就等于蓝条最大值，数学差，魔法值不高，很快就到瓶颈了。外语影响回蓝速度。经验和智力加急速和穿透的。不玩算法的码农，像是战士，打拼靠血条，体质加生命，精神加生命回复，经验和敏捷加急速和破甲。”19. IT大牛是怎样炼成的？记得初入公司时，写的代码乱七八糟，错误百出，bug连连，不仅项目经理骂我，其他同事也对我怨声载道。后来听朋友介绍，就报了一个培训班。经过1个月的刻苦学习，终于功夫不负有心人—他们都骂不过我了。20. 会写脚本的程序员如何去阿里工作？告诉面试官，我不吃月饼。生活相关21. 码农们最常说的谎言是什么？// TODO22. 程序员的优越感从何而来？感觉码农写代码并没有比修自行车高贵，那么为什么他们这么吊炸天？码农也是你们叫的？23. 你有哪些用计算机技能解决生活问题的经历？（1）我认识一个大牛，他不喜欢洗袜子，又不喜欢袜子的臭味。他买了很多样式一样的袜子，把这些袜子放在地上，根据臭的程度，摆一个二叉堆。每天早上，他pop两只最“香”的袜子，穿上；晚上回到家，把袜子脱下来，push到堆里。某一天，top的袜子超过他的耐臭能力，全扔掉，买新的。（2）写个死循环把笔记本的CPU和GPU占满，把出风口当吹风机吹头。24. 突然想开一家程序员主题的餐馆，名字就叫程序员的菜，菜名就叫各种语言中的关键字，各位指点一哈，有前途没？北京西直门嘉茂广场外面有很大一个招牌“mysql”,当年我就是好奇这家餐厅和“mysql”到底有啥关系才去这家韩国餐厅的，结果服务员告诉我那是“明月三千里”的缩写，我有种被忽悠的赶脚。25. 如何让别人明白「学习或从事计算机专业的人不一定会修电脑」？我是学法学的是不是要搓个火球给你看阿？26. 如何反驳「程序员离开电脑就是废物」这个观点？不不不，很多程序员在电脑前也是废物。27. 为什么程序员无论到哪儿都喜欢背电脑包，哪怕里面没有装电脑？因为他们没有别的包。28. 程序员都有哪些强迫症行为？乘电梯的时候看着电梯的按钮面板（UI）常常会开始思考电梯的调度算法，然后仔细一想好像状态挺多的，多个实例之间状态可以互相影响，还涉及到一些优先级、加速度、预判方面的东西，仔细想想其实挺复杂的，然后还没等到出电梯就放弃了。然后不知道哪次坐又会望着面板开始想。29. 发呆是一种生理需求吗？其实是删除缓存文件加整理磁盘碎片30. 什么时候感觉过你的心是凉的？文件没保存31. 如何回复程序员发来的短信：「Hello world」？hello nerd.32. 程序员的鄙视链是什么？老婆漂亮的程序员，鄙视老婆不漂亮的程序员。有老婆的程序员，鄙视没有老婆的程序员。没有老婆有女朋友的程序员，鄙视单身程序狗。在单身狗之间，才有语言、编辑器和操作系统的互相鄙视。33. 程序员女朋友如何给程序员男朋友过生日？告诉他，接口已经准备好了。34. 女票允许我出轨，并且还介绍她闺密给我认识。在她真的很爱我的前提下，该如何理解她的行为？千万不要上当！！！Mac告诉你，我也可以装windows哦，但你真的装了，会用高发热来报复你的！35. 分手100天了，还没有走出来怎么办？替换文件永远比删除文件更彻底。36. 程序员夫妻结婚戒指刻什么字好？0 error 0 warning37. 乞求代码没有bug，该拜哪个神仙？拜雍正，专治八阿哥。38. 产品死了，如何安葬？开源。娱乐相关39.《微微一笑很倾城》中的大四刚毕业的计算机水平是现实中能够达到的吗？电视剧中肖奈精通软件制作（这是小case了），精通黑客技术（打破世界级比赛记录），写的了游戏引擎（领先业内水平），精通算法优化。我也是IT刚毕业学生，前端er一枚。说实话整个剧中被肖奈的水平震惊了，连女演员好不好看都顾不得了。且不说剧情，这个水平是一个大四学生能够具备的吗。我对自己产生了深深的怀疑。（1）你怎么不问男主的长相是一个大四学生所具备的吗。（2）大四有这个技术水平的，肯定没有那么多头发。40. 为什么圣斗士每次出招前都要大喊一声招式？函数要先声明，然后才能调用。41. 为何诸葛亮常年拿一个羽毛扇？跟CPU上必须装风扇是一个道理。42. 苹果是宗教吗？是！并且教内有这样一个传说：任何人只要卖两个肾去买iphone就能见到教主。43. 罗永浩提出的锤子超过苹果的时间表大概是怎么样的？家祭无忘告乃翁]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>程序员</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Struts2]]></title>
    <url>%2F2015%2F12%2F17%2Fstruts2%2F</url>
    <content type="text"><![CDATA[Struts2一、框架概述什么是框架，为什么使用框架，框架优点框架（framework）是一个基本概念上的结构，用于去解决或者处理复杂的问题框架，即framework。其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统。简单说就是使用别人搭好的舞台，你来做表演。框架是在特定的领域内解决问题。优点重用代码大大增加，软件生产效率和质量也得到了提高使用框架开发，它提供统一的标准，大大降低了我们的后期维护。学习框架重点:了解框架做了什么，我们要在这个基础上在做什么事情。 二、java开发中常用框架SSH (SSM SSI)SSH struts2 spring hibernateSSM(SSI) springmvc spring mybatis(ibatis) SSH 它是企业开发中比较主流的一套架构。SSH框架在开发中所处的位置: 三、Struts2框架介绍什么是struts2框架，学习struts2框架的核心。Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互Struts2=struts1+webwork 问题:struts2是一个mvc框架，它的mvc是什么? javaweb开发中的mvc,是在jsp的model2模式中提过Model——javabeanView——–jspController—-servlet 核心点:1.拦截器 interceptor2.Action3.ognl与valueStack 在现在开发中与struts2比较类似的框架有哪些?Struts1 webwork springmvc jsf Struts2框架流程 四、Struts2框架执行流程1．Struts2源码导入 对于struts2框架它的源代码我们主要使用三部分1.struts2核心部分源代码 org.apache.struts2xxsrc\core\src\main\java2.struts2的xwork核心部分源代码src\xwork-core\src\main\java\com\opensymphony\xwork23.struts2的插件的源代码src\plugins2．关于struts.xml配置文件中提示问题第一步在eclipse的window下首选面中查找xml catalog第二步Location:配置本地的dtd文件路径key type:选择URIKey: http://struts.apache.org/dtds/struts-2.3.dtd注意版本要对应，如果你可以上网，那么会自动缓存dtd,具有提示功能。 3．执行流程介绍1.当通过浏览器发送一个请求2.会被StrutsPrepareAndExecuteFilter拦截3.会调用strtus2框架默认的拦截器(interceptor)完成部分功能4.在执行Action中操作5.根据Action中方法的执行结果来选择来跳转页面Resutl视图 一般管StrutsPrepareAndExecuteFilter 叫做前端控制器(核心控制器)，只有配置了这个filter我们的strtus2框架才能使用。Strtus2的默认拦截器(interceptor)它们是在struts-default.xml文件中配置注意:这上xml文件是在strtus-core.jar包中。默认的拦截器是在defaultStack中定义的。 五、Struts2配置详解1．Struts2配置文件加载顺序 第一个加载的是default.properties文件位置:strtus2-core.jar包 org.apache.struts2包下作用:主要是声明了struts2框架的常量第二个加载的是一批配置文件Strtus-default.xml位置:struts2-corl.jar作用:声明了interceptor result beanStrtus-plugin.xml位置:在strtus2的插件包中作用:主要用于插件的配置声明Strtus.xml位置:在我们自己的工程中作用:用于我们自己工程使用strtus2框架的配置第三个加载的是自定义的strtus.properties位置:都是在自己工程的src下作用:定制常量第四自定义配置提供第五加载的是web.xml配置文件主要是加载strtus2框架在web.xml文件中的相关配置.第六 bean相关配置 重点掌握:1.Default.properties2.Struts-default.xml3.Struts-plugin.xml4.Strtus.xml5.web.xml 2．struts.xml文件配置介绍2.1．package配置1.name属性 作用:定义一个包的名称，它必须唯一。2.namespace属性 作用:主要是与action标签的name属性联合使用来确定一个action 的访问路径3.extends属性 作用:指定继承自哪个包。一般值是strtus-default strtus-default包是在strtus-default.xml文件中声明的。4.abstruct属性 它代表当前包是一个抽象的，主要是用于被继承2.2．action配置1.name属性 作用:主要是与package的namespace联合使用来确定一个action的访问路 径2.class属性 作用:用于指示当前的action类3.method属性 作用:用于指示当前的action类中的哪个方法执行2.3．result配置它主要是用于指示结果视图1.name属性 作用是与action类的method方法的返回值进行匹配，来确定跳转路径2.type属性 作用是用于指定跳转方式2.4．扩展关于action配置中的class与method的默认值以及result中的name与type 默认值问题 原因:strtus-default.xml文件中配置 它的作用就是当一个请求来时，如果查找不到指定的class及对应的method就会执行ActionSupport类中的execute方法。在这个类的execute方法中默认返回的是”success”也就是说，result的name属性默认值是success,默认的跳转方式是请求转发 dispatcher 3．常量配置default.properties文件中定义了struts2框架常用常量 .问题:我们怎样可以定义常量1.可以在src下创建一个strtus.properties配置文件2.可以在web.xml文件中配置3.可以直接在strtus.xml文件中定义常量 (推荐) 注意:后加载的配置文件中的常量会将先加载的常量覆盖 六、Struts2的Action详解Struts2中的action，主要是完成业务逻辑操作。Action替代在servlet中完成的作用。Action的学习主要有两点1.如何创建一个struts2的action2.如果访问一个struts2的action 1．Action类创建方式(三种)1.创建一个pojo类Pojo(plani Ordinary java object)简单的java对象Pojo类就是没有实现任何接口没有继承任何类优点:无耦合缺点:所有的功能都要自己完成 2.创建一个类实现一个Action接口com.opensymphony.xwork2.Action 在Action接口中定义了五个常量，一个execute方法五个常量:它们是默认的五个结果视图:ERROR : 错误视图INPUT: 它是struts2框架中interceptor中发现问题后会访问的一个视图LOGIN:它是一个登录视图，可以在权限操作中使用NONE:它代表的是null,什么都不做（也不会做跳转操作）SUCCESS:这是一个成功视图优点：耦合度低缺点:还是需要自己来完成功能 3.创建一个类继承ActionSupport类com.opensymphony.xwork2.ActionSupportActionSupport类也实现了Action接口。我们在开发中一般会使用这种方案:优点:具有丰富的功能，例如 表单校验 错误信息设置 国际化缺点:耦合度高2．action的访问方式1.直接通过标签来配置，通过method来指定访问的方法，如果method没有，默认访问的是execute方法。2.简化的action访问方式，可以使用通配符来访问。这种方式的缺点:不建议使用过多的号，它带来程序阅读障碍，不便于理解使用*来简化操作方案，它对名称规范必须进行一个统一。 3．扩展–动态方法调用 这是strtus2提供的动态方法调用。 注意:对于strtus2的动态方法调用，要想使用我们必须配置一个常量来开启动态方法调用 这代表动态方法调用没有开启 个人不建议使用动态方法调用 七、Struts2框架封装数据主要解决的问题:是在action中如果获取请求参数 主要有两种方式:1.属性驱动a.直接在action类中提供与请求参数匹配属性，提供get/set方法b.在action类中创始一个javaBean,对其提供get/set ，在请求时页面上要进行修改， 例如 user.username user.password ,要使用ognl表达式以上两种方式的优缺点:第一种比较简单，在实际操作我们需要将action的属性在赋值给模型(javaBean) 去操作 第二种:不需要在直接将值给javaBean过程，因为直接将数据封装到了javaBean 中。它要求在页面上必须使用ognl表达式，就存在页面不通用问题。 2.模型驱动步骤:1.让Action类要实现一个指定接口ModelDriven2.实例化模型对象(就是要new出来javaBean)3.重写getModel方法将实例化的模型返回。 对于模型驱动它与属性驱动对比，在实际开发中使用比较多，模型驱动缺点，它只能对 一个模型数据进行封装。 八、总结1.关于strtus2框架的环境搭建2.关于strtus2框架配置3.关于strtus2框架请求参数封装4.关于strtus2框架的路径跳转 关于action访问的配置 路径 关于路径跳转问题:是通过来配置跳转的路径.它的name属性是与action中的方法的返回值进行对比的。它的type属性可以取哪些值? 默认值是dispatcher 它代表的是请求转发。针对于jsp页面redirect 它代表的是重定向 针对于jsp页面chain 它类似于请示转发，只不过它是针对于action跳转.redirectAction 它类似于重定向 针对于action关于路径跳转的配置可以直接在下创建全局的result]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浏览器插件的使用教程]]></title>
    <url>%2F2015%2F09%2F23%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[浏览器插件的使用教程安装油猴插架 [下载安装][http://www.tampermonkey.net] 选择和你浏览器对应的插架，如下图 安装成功后可以在浏览器插件（扩展）中看到油猴，如下图 使用油猴安装插件 点击油猴图标可以打开油猴的控制面板，如下图 点击[获取新脚本][http://tampermonkey.net/scripts.php] 选择脚本网站，推荐使用GreasyFork 选择要安装的脚本 在首页点击脚本列表 选择你需要的脚本点击安装 点击进行安装，如下图 安装成功后可以在油猴面板查看 插件可根据自己的需求安装，在脚本列表中可以看到很多有意思的插件 举例：查看VIP视频 安装VIP视频在线解析插件 打开视频网站，播放视频，可看到插件，如下图 解析VIP 视频的插件很多，选一个可以用的即可，也可以安装多个插件的作用只是]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>浏览器插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux]]></title>
    <url>%2F2015%2F09%2F21%2FLinux%2F</url>
    <content type="text"><![CDATA[Linux学习初学者必备 Linux常用命令 01-Linux的简介.avi什么是LinuxLinux是基于Unix的,是一种自由和开放源码的操作系统，存在着许多不同的Linux版本，但它们都使用了Linux内核。Linux的应用服务器系统: Web应用服务器、数据库服务器、接口服务器、DNS、FTP等等嵌入式系统: 路由器、防火墙、手机、PDA、IP 分享器、交换器、家电用品的微电脑控制器等等高性能运算、计算密集型应用 Linux有强大的运算能力桌面应用系统移动手持系统Linux的主流版本Ubuntu, Centos, redhat, fedora, freebsd… 02-虚拟软件的安装.avi安装参考《虚拟软件vmware安装.doc》 03-CentOS的安装.avi参考《CentOS6详细安装文档.doc》 04-Linux的目录结构.avi 05-Linux的常用命令：cd命令.avi==切换目录==cd app 切换到app目录cd .. 切换到上一层目录cd / 切换到系统根目录cd ~ 切换到用户主目录cd - 切换到上一个所在目录 06-Linux的常用命令：ls、ll、dir命令.avi==列出文件列表==ls(list)是一个非常有用的命令，用来显示当前目录下的内容。配合参数的使用，能以不同的方式显示目录内容格式：ls[参数] [路径或文件名] 在linux中以 . 开头的文件都是隐藏的文件lsls -a 显示所有文件或目录（包含隐藏的文件）ls -l 缩写成ll 07-Linux的常用命令：mkdir、rmdir命令.avi==创建目录==mkdir app 在当前目录下创建app目录mkdir –p app2/test 级联创建aap2以及test目==移除目录==rmdir(remove directory)命令可用来删除“空”的子目录rmdir app 删除app目录 08-Linux的常用命令：cat、more、less、tail命令.avi浏览文件 cat 用于显示文件的内容格式：cat[参数]&lt;文件名&gt;cat yum.conf more 一般用于要显示的内容会超过一个画面长度的情况。按空格键显示下一个画面。回车显示下一行内容。按 q 键退出查看。more yum.conf 空格显示下一页数据 回车显示下一行的数据 less 用法和more类似，不同的是less可以通过PgUp、PgDn键来控制less yum.conf PgUp 和 PgDn 进行上下翻页. tail命令是在实际使用过程中使用非常多的一个命令，它的功能是：用于显示文件后几行的内容。==tail -10 /etc/passwd 查看后10行数据==tail -f catalina.log ==动态查看日志==ctrl+c 结束查看 09-Linux的常用命令：rm命令.avi==文件删除操作==rm 删除文件rm a.txt 删除a.txt文件删除需要用户确认，y/n rm 删除不询问rm -f a.txt 不询问，直接删除 rm 删除目录rm -r a 递归删除不询问递归删除（慎用）rm -rf a 不询问递归删除rm -rf * 删除所有文件rm -rf /* 自杀 10-Linux的远程连接：CRT的软件的安装和使用.avi11-Linux的常用命令：cp、mv命令.avi文件的拷贝和剪切cp(copy)命令可以将文件从一处复制到另一处。一般在使用cp命令时将一个文件复制成另一个文件或复制到某目录时，需要指定源文件名与目标文件名或目录。cp a.txt b.txt 将a.txt复制为b.txt文件cp a.txt ../ 将a.txt文件复制到上一层目录中 mv 移动或者重命名mv a.txt ../ 将a.txt文件移动到上一层目录中mv a.txt b.txt 将a.txt文件重命名为b.txt 12-Linux的常用命令：tar命令.avi==打包或者解压==tar命令位于/bin目录下，它能够将用户所指定的文件或目录打包成一个文件，但不做压缩。一般Linux上常用的压缩方式是选用tar将许多文件打包成一个文件，再以gzip压缩命令压缩成xxx.tar.gz(或称为xxx.tgz)的文件。常用参数：-c:创建一个新tar文件-v:显示运行过程的信息-f:指定文件名-z:调用gzip压缩命令进行压缩-t:查看压缩文件的内容-x:解开tar文件 ==打包==tar –cvf xxx.tar ./*打包并且压缩：tar –zcvf xxx.tar.gz ./* ==解压==tar –xvf xxx.tartar -xvf xxx.tar.gz -C /usr/aaa 13-Linux的常用命令：grep命令.avigrep命令查找符合条件的字符串用法: grep [选项]… PATTERN [FILE]…示例：grep lang anaconda-ks.cfg 在文件中查找langgrep lang anaconda-ks.cfg –color 高亮显示 14-Linux的常用命令：其他常用命令.avi其他常用命令pwd 显示当前所在目录touch 创建一个空文件touch a.txtll -h 友好显示文件大小wget 下载资料 wget http://nginx.org/download/nginx-1.9.12.tar.gz 15-Linux的常用命令：VI和VIM编辑器.avi==Vi和Vim编辑器==在Linux下一般使用vi编辑器来编辑文件vi既可以查看文件也可以编辑文件三种模式：命令行、插入、底行模式切换到命令行模式：按Esc键切换到插入模式：按 i 、o、a键i 在当前位置生前插入I 在当前行首插入a 在当前位置后插入A 在当前行尾插入o 在当前行之后插入一行O 在当前行之前插入一行 切换到底行模式：按 :（冒号） 打开文件：vim file退出：esc :q修改文件：输入i进入插入模式保存并退出：esc :wq不保存退出：esc :q! 16-Linux的常用命令：重定向输出.avi&gt; 重定向输出，覆盖原有内容&gt;&gt; 重定向输出，又追加功能 cat /etc/passwd &gt; a.txt 将输出定向到a.txt中cat /etc/passwd &gt;&gt; a.txt 输出并且追加 ifconfig &gt; ifconfig.txt 17-Linux的常用命令：管道和命令执行控制.avi管道是Linux命令中重要的一个概念，其作用是将一个命令的输出用作另一个命令的输入 ls --help | more 分页查询帮助信息ps –ef | grep java 查询名称中包含java的进程ifconfig | morecat index.html | moreps –ef | grep aio 命令控制命令之间使用 &amp;&amp; 连接，实现逻辑与的功能只有在 &amp;&amp; 左边的命令返回真,&amp;&amp; 右边的命令才会被执行只要有一个命令返回假,后面的命令就不会被执行。mkdir test &amp;&amp; cd test 18-Linux的常用命令：网络通讯的命令.avi网络通讯命令ifconfig 显示或设置网络设备ifconfig eth0 up 启用eth0网卡ifconfig eth0 down 停用eth0网卡 ping 探测网络是否通畅。ping 192.168.0.1 netstat 查看网络端口。netstat -an | grep 3306 查询3306端口占用情况 19-Linux的常用命令：系统管理的命令.avi系统管理命令date 显示或设置系统时间date 显示当前系统时间date -s “2014-01-01 10:10:10“ 设置系统时间 df 显示磁盘信息df –h 友好显示大小 free 显示内存状态free –m 以mb单位显示内存组昂头 top 显示，管理执行中的程序 clear 清屏幕ps 正在运行的某个进程的状态ps –ef 查看所有进程ps –ef | grep ssh 查找某一进程 kill 杀掉某一进程kill 2868 杀掉2868编号的进程kill -9 2868 强制杀死进程 du 显示目录或文件的大小du –h 显示当前目录的大小who 显示目前登入系统的用户信息hostname 查看当前主机名修改：vi /etc/sysconfig/networkuname 显示系统信息。uname -a 显示本机详细信息依次为：内核名称(类别)，主机名，内核版本号，内核版本，内核编译日期，硬件名，处理器类型，硬件平台类型，操作系统名称 20-Linux的常用命令：用户管理的命令.avi用户管理命令useradd 添加一个用户useradd test 添加test用户useradd test -d /home/t1 指定用户home目录passwd 设置、修改密码passwd test 为test用户设置密码 切换登录：ssh -l test -p 22 192.168.19.128su – 用户名userdel 删除一个用户userdel test 删除test用户(不会删除home目录)userdel –r test 删除用户以及home目录 21-Linux的常用命令：组管理的命令.avi组管理命令当在创建一个新用户user时，若没有指定他所属于的组，就建立一个和该用户同名的私有组创建用户时也可以指定所在组groupadd 创建组groupadd public 创建一个名为public的组useradd u1 –g public 创建用户指定组 groupdel 删除组，如果该组有用户成员，必须先删除用户才能删除组。groupdel public 22-Linux的常用命令：权限管理.avi文件权限变更文件权限chmod 变更文件或目录的权限。chmod 755 a.txtchmod u=rwx,g=rx,o=rx a.txtchmod 000 a.txt / chmod 777 a.txt chown ==变更文件或目录改文件所属用户和组==chown u1:public a.txt ：变更当前的目录或文件的所属用户和组chown -R u1:public dir ：变更目录中的所有的子目录及文件的所属用户和组]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
