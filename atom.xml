<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>wjlfun.info</title>

    <subtitle>云飞扬的个人博客</subtitle>
    <link href="/atom.xml" rel="self"/>

    <link href="http://wjlfun.info/"/>
    <updated>2018-05-15T12:11:21.497Z</updated>
    <id>http://wjlfun.info/</id>

    <author>
        <name>吴金龙</name>

    </author>

    <generator uri="http://hexo.io/">Hexo</generator>

    <entry>
        <title>shiro原理及其运行流程介绍</title>
        <link href="http://wjlfun.info/2016/04/07/shiro%E5%8E%9F%E7%90%86%E5%8F%8A%E5%85%B6%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E4%BB%8B%E7%BB%8D/"/>
        <id>http://wjlfun.info/2016/04/07/shiro原理及其运行流程介绍/</id>
        <published>2016-04-06T16:00:00.000Z</published>
        <updated>2018-05-15T12:11:21.497Z</updated>

        <content type="html">
            <![CDATA[<script src="\assets\js\APlayer.min.js"> </script><div id="article_content" class="article_content csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post"><br>                    <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css"><br>            <div class="htmledit_views"><br><br><h2><a name="t0"></a><span style="font-size:14px;">什么是shiro</span></h2><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">shiro是apache的一个开源框架，是一个权限管理的框架，实现 用户认证、用户授权。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">spring中有spring security (原名Acegi)，是一个权限框架，它和spring依赖过于紧密，没有shiro使用简单。</span></p><br><p><span style="font-size:14px;">shiro不依赖于spring，shiro不仅可以实现 web应用的权限管理，还可以实现c/s系统，分布式系统权限管理，shiro属于轻量框架，越来越多企业项目开始使用shiro。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">使用shiro实现系统的权限管理，有效提高开发效率，从而降低开发成本。</span></p><br><p><span style="font-size:14px;"><br></span></p><br><p></p><br><h2><a name="t1"></a><span style="font-size:14px;">&nbsp;shiro架构</span></h2><br><p></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">&nbsp;<img src="https://img-blog.csdn.net/20170312125335529?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWluZV9zb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">subject：主体，可以是用户也可以是程序，主体要访问系统，系统需要对主体进行认证、授权。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">securityManager：安全管理器，主体进行认证和授权都是通过securityManager进行。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">authenticator：认证器，主体进行认证最终通过authenticator进行的。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">authorizer：授权器，主体进行授权最终通过authorizer进行的。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">sessionManager：web应用中一般是用web容器对session进行管理，shiro也提供一套session管理的方式。</span></p><br><p><span style="font-size:14px;">SessionDao：&nbsp; 通过SessionDao管理session数据，针对个性化的session数据存储需要使用sessionDao。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">cache Manager：缓存管理器，主要对session和授权数据进行缓存，比如将授权数据通过cacheManager进行缓存管理，和ehcache整合对缓存数据进行管理。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">realm：域，领域，相当于数据源，通过realm存取认证、授权相关数据。</span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;"><strong>注意：在realm中存储授权和认证的逻辑。</strong></span></p><br><p><span style="font-size:14px;">&nbsp;</span></p><br><p><span style="font-size:14px;">cryptography：密码管理，提供了一套加密/解密的组件，方便开发。比如提供常用的散列、加/解密等功能。</span></p><br><p><span style="font-size:14px;">比如 md5散列算法。</span></p><br><p><span style="font-size:14px;"><strong>认证过程</strong><br></span></p><br><span style="font-size:14px;"><img src="https://img-blog.csdn.net/20170312125241625?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWluZV9zb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" width="577" height="488"><br></span><br><p></p><br><p></p><br><p></p><br><h3><a name="t2"></a><span style="font-size:14px;">&nbsp; 认证执行流程</span></h3><br><p></p><br><p><span style="font-size:14px;">1、通过ini配置文件创建securityManager</span></p><br><p><span style="font-size:14px;">2、调用subject.login方法主体提交认证，提交的token</span></p><br><p><span style="font-size:14px;">3、securityManager进行认证，securityManager最终由ModularRealmAuthenticator进行认证。</span></p><br><p><span style="font-size:14px;">4、ModularRealmAuthenticator调用IniRealm(给realm传入token) 去ini配置文件中查询用户信息</span></p><br><p><span style="font-size:14px;">5、IniRealm根据输入的token（<span style="color:#000000;background:#C0C0C0;">UsernamePasswordToken</span>）从 shiro.ini查询用户信息，根据账号查询用户信息（账号和密码）</span></p><br><p><span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果查询到用户信息，就给ModularRealmAuthenticator返回用户信息（账号和密码）</span></p><br><p><span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果查询不到，就给ModularRealmAuthenticator返回null</span></p><br><p><span style="font-size:14px;">6、ModularRealmAuthenticator接收IniRealm返回Authentication认证信息</span></p><br><p><span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果返回的认证信息是null，ModularRealmAuthenticator抛出异常（<u><span style="color:#000080;">org.apache.shiro.authc.UnknownAccountException</span></u>）</span></p><br><span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果返回的认证信息不是null（说明inirealm找到了用户），对IniRealm返回用户密码 （在ini文件中存在）</span><br><p><span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 和 token中的密码 进行对比，如果不一致抛出异常（<u><span style="color:#000080;">org.apache.shiro.authc.IncorrectCredentialsException</span></u>）</span></p><br><p><span style="font-size:14px;"><strong>授权流程</strong></span></p><br><p><span style="font-size:14px;"><strong><img src="https://img-blog.csdn.net/20170312142941667?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWluZV9zb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" width="460" height="481"><br></strong></span></p><br><p><span style="font-size:14px;"><strong></strong></span></p><br><h2><a name="t3"></a><strong><span style="font-family:'宋体';">授权流程</span></strong></h2><br><p></p><br><p><span style="font-size:14px;"><strong></strong></span></p><br><p>&nbsp;</p><br><p>1<span style="font-family:'宋体';">、对</span><span style="font-family:Calibri;">subject</span><span style="font-family:'宋体';">进行授权，调用方法</span>isPermitted<span style="font-family:'宋体';">（</span>“permission<span style="font-family:'宋体';">串</span><span style="font-family:Calibri;">“</span><span style="font-family:'宋体';">）</span></p><br><p>2<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">SecurityManager</span><span style="font-family:'宋体';">执行授权，通过</span>ModularRealmAuthorizer<span style="font-family:'宋体';">执行授权</span></p><br><p>3<span style="font-family:'宋体';">、</span>ModularRealmAuthorizer<span style="font-family:'宋体';">执行</span>realm<span style="font-family:'宋体';">（自定义的</span><span style="font-family:Calibri;">Realm</span><span style="font-family:'宋体';">）从数据库查询权限数据</span></p><br><p><span style="font-family:'宋体';">调用</span>realm<span style="font-family:'宋体';">的授权方法：</span><span style="color:#000000;background:rgb(192,192,192);">doGetAuthorizationInfo</span></p><br><p>&nbsp;</p><br><p>4<span style="font-family:'宋体';">、</span><span style="font-family:Calibri;">realm</span><span style="font-family:'宋体';">从数据库查询权限数据，返回</span>ModularRealmAuthorizer</p><br><p>5<span style="font-family:'宋体';">、</span>ModularRealmAuthorizer<span style="font-family:'宋体';">调用</span>PermissionResolver<span style="font-family:'宋体';">进行权限串比对</span></p><br><p>6<span style="font-family:'宋体';">、如果比对后，</span>isPermitted<span style="font-family:'宋体';">中</span>“permission<span style="font-family:'宋体';">串</span><span style="font-family:Calibri;">“</span><span style="font-family:'宋体';">在</span><span style="font-family:Calibri;">realm</span><span style="font-family:'宋体';">查询到权限数据中，说明用户访问</span><span style="font-family:Calibri;">permission</span><span style="font-family:'宋体';">串有权限，否则<br> 没有权限，抛出异常。</span></p><br><p><span style="font-size:14px;"><br></span></p><br>            </div><br>                </div>]]></content>

        <summary type="html">


            &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;article_content&quot;
            class=&quot;article_content csdn-tracking-statistics&quot; data-pid=&quot;blog&quot;


        </summary>

        <category term="Java" scheme="http://wjlfun.info/categories/Java/"/>


        <category term="shiro" scheme="http://wjlfun.info/tags/shiro/"/>

    </entry>

    <entry>
        <title>Restful风格的springMVC</title>
        <link href="http://wjlfun.info/2016/01/20/Restful%E9%A3%8E%E6%A0%BC%E7%9A%84springMVC/"/>
        <id>http://wjlfun.info/2016/01/20/Restful风格的springMVC/</id>
        <published>2016-01-19T16:00:00.000Z</published>
        <updated>2018-05-15T12:04:31.509Z</updated>

        <content type="html">
            <![CDATA[<script src="\assets\js\APlayer.min.js"> </script><div id="article_content" class="article_content csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post"><br>                    <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css"><br>            <div class="htmledit_views"><br><br><div class="blog_title" style="margin-bottom:15px;font-family:Helvetica, Tahoma, Arial, sans-serif;line-height:18px;"><br><h3 style="line-height:1.5em;margin:0px 0px .5em;padding:10px 0px 0px;"><span style="line-height:1.8em;"></span><br></h3><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:24px;">一、概念</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-weight:normal;"><span style="font-size:24px;"><br></span></span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">了解REST得知道5个名字：</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">1、资源 Resource</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">资源就是服务器上获取到的东西都可以说是资源，一条用户记录，一个用户的密码，一张图片等等都是</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;"><br></span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">2、资源的表述 Representation</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">就是资源的格式，是HTML、XML、JSON、纯文本、图片等等，可以用各种各样的格式来表述你获取到的资源，这</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;"><span style="color:rgb(51,51,51);font-family:Arial, 'Microsoft YaHei';font-size:18px;line-height:14px;">就是资源的表述</span><br></span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">3、状态转移 State Transfer</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。操作是动词，资源是名词<br></span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;"><br></span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">4、统一接口 Uniform Interface</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">REST必须通过统一的接口对资源进行操作，HTTP1.1协议定义了资源的统一接口：</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">·GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">`HTTP &nbsp;HEAD可以自定义</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">·HTTP STATUS响应状态 可自定义</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">·一套标准的内容协商机制</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">·一套标准的缓存机制</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">·一套标准的客户端身份认证机制</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;"><br></span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">5、超文本驱动 Hypertext Driven</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">资源之间通过超链接相互关联，超链接代表资源之间的关系，也代表可执行的状态迁移</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">Restful API就是按照REST架构的思想设计出来的API</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">核心就是：将API拆分为逻辑上的资源，这些资源通过http（GET/POST/PUT/DELETE等）被操作</span></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><span style="font-size:18px;font-weight:normal;">SpringMVC的 Restful API</span></p><br><br><h3 style="font-size:16px;line-height:1.5em;margin:0px 0px .5em;padding:10px 0px 0px;"><a name="t1"></a><br><span style="line-height:1.8em;font-size:12px;"><span style="font-size:24px;">二、RESTful简介</span></span></h3><br></div><br><div id="blog_content" class="blog_content" style="line-height:1.8em;font-family:Helvetica, Tahoma, Arial, sans-serif;"><br><div class="iteye-blog-content-contain"><br><p style="font-size:14px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong>&nbsp;</strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><strong>1.REST架构师一个抽象的概念，</strong>目前主要是基于HTTP协议实现，其目的是为了提高系统的可伸缩性，降低应用之间的耦合度，便于框架分布式处理程序。</span></p><br><p style="font-size:14px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br>&nbsp;</p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="font-size:18px;">2.REST主要对以下两方面进行了规范</span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">-定位资源的URL风格，例如</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;<a href="http://baidu.com/admin/1234" target="_blank" rel="noopener">http://baidu.com/admin/1234</a></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;<span style="line-height:16.3636px;"><a href="http://baidu.com/admin/1234/10/11" target="_blank" rel="noopener">http://baidu.com/admin/1234/10/11</a></span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">-如何对资源操作</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;采用HTTP协议规定的GET、POST、PUT、DELETE动作处理资源的增删该查操作</span></span></p><br><p style="font-size:14px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:11.8182px;line-height:16.3636px;">&nbsp;<br><img alt="" src="http://dl2.iteye.com/upload/attachment/0104/2126/43d7fb59-8f54-3ada-8083-aa988457cfcd.jpg" style="border:0px;" width="316" height="156"><br><br>&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">3.什么是RESTful？</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;-符合REST约束风格和原则的应用程序或设计就是RESTful.</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;eg: &nbsp;/emp/1 &nbsp;HTTP GET &nbsp; &nbsp; &nbsp;查询id=1的emp</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style="line-height:16.3636px;">/emp/1 &nbsp;HTTP DELETE &nbsp; &nbsp;删除id=1的emp,实验中直接删除会报405错误，但是采用$.ajax异步删除就没问题</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style="line-height:16.3636px;">/emp/1 &nbsp;HTTP PUT &nbsp; &nbsp;跟新emp</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style="line-height:16.3636px;">/emp/add &nbsp;HTTP POST &nbsp; &nbsp; 新增emp</span></span></p><br><p style="font-size:14px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br>&nbsp;</p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">4.Spring对RESTful的支持</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">- Spring MVC 对 RESTful应用提供了以下支持</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">- 利用@RequestMapping 指定要处理请求的URI模板和HTTP请求的动作类型</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">- 利用@PathVariable讲URI请求模板中的变量映射到处理方法参数上</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="color:rgb(255,0,0);"><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">- 利用Ajax,在客户端发出PUT、DELETE动作的请求</span></span></strong></span></p><br><p style="font-size:14px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br>&nbsp;</p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">eg:&nbsp;</span><span style="line-height:16.3636px;">@RequestMapping(value = “/{id}”, method = RequestMethod.GET)</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp; &nbsp; &nbsp; public String toUpdate(@PathVariable(“id”) Integer id, Model model) {</span><span style="line-height:16.3636px;">}</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">5，RequestMapping的一般应用格式。</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;@RequestMapping(value = “/{id}”, method = RequestMethod.GET)</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp;</span><span style="line-height:16.3636px;">@RequestMapping(value = “/{id}”, method = RequestMethod.POST)</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp;</span><span style="line-height:16.3636px;">@RequestMapping(value = “/{id}”, method = RequestMethod.DELETE) &nbsp; // 因为这个需要Ajax请求，所有返回的是个json</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;@ResponseBody</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;"><span style="line-height:16.3636px;">&nbsp;</span><span style="line-height:16.3636px;">@RequestMapping(value = “/{id}”, method = RequestMethod.PUT)</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">6，客户端发送PUT，DELETE请求</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp; 可以采用Ajax方式发送PUT和DELETE请求</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><div class="dp-highlighter" style="font-family:Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Consolas, 'Courier New', monospace;overflow:auto;margin-left:9px;padding:1px;background-color:transparent;"><br><div class="bar"><br><div class="tools" style="padding:3px;margin:0px;font-weight:bold;"><span style="font-size:18px;">Java代码&nbsp;&nbsp;<a title="收藏这段代码" style="color:rgb(16,138,198);text-decoration:underline;" target="_blank"><img class="star" src="http://lydia-fly.iteye.com/images/icon_star.png" alt="收藏代码" style="border:0px;"></a></span></div><br></div><br><ol start="1" class="dp-j" style="line-height:1.4em;margin:0px 0px 1px;padding:2px 0px;border:1px solid rgb(209,215,220);color:rgb(43,145,175);"><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">$.ajax(&nbsp;{&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;:&nbsp;<span class="string" style="color:#0000FF;">“DELETE”</span>,&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url&nbsp;:&nbsp;<span class="string" style="color:#0000FF;">“/spring_crud_restful/emp/deleteEmp/“</span>&nbsp;+&nbsp;id,&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataType&nbsp;:&nbsp;<span class="string" style="color:#0000FF;">“json”</span>,&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success&nbsp;:&nbsp;function(data)&nbsp;{&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(data);&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.href&nbsp;=&nbsp;<span class="string" style="color:#0000FF;">“/spring_crud_restful/emp/listEmp/1”</span>;&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></span></li><li style="margin:0px 0px 0px 38px;padding:0px 0px 0px 10px;border-left-width:1px;border-left-style:solid;border-left-color:rgb(209,215,220);line-height:18px;background-color:rgb(250,250,250);"><br><span style="color:#000000;"><span style="font-size:18px;">&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span></span></li></ol></div><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="font-size:18px;">&nbsp;</span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><strong><span style="line-height:16.3636px;"><span style="font-size:18px;">7，静态资源访问处理</span></span></strong></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">采用RESTful架构后，需要将web.xml中控制器拦截的请求设置为/，这样会将css,js等静态资源进行拦截，发送404错误。</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">解决方法：</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">–配置&lt;mvc:resources/&gt;&nbsp;</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;&lt;mvc:resources mapping=”请求URI” location=”资源位置” /&gt;</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">–配置&lt;mvc:default-servlet-handler/&gt;</span></span></p><br><p style="margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><span style="line-height:16.3636px;"><span style="font-size:18px;">&nbsp;&lt;mvc:default-servlet-handler/&gt;</span></span></p><br><p style="font-size:14px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:0px;"><br><br></p><br><p style="margin-top:0px;margin-bottom:0px;font-family:Arial, 'Microsoft YaHei';color:rgb(51,51,51);"><br><br></p><br></div><br></div><br>            </div><br>                </div>]]></content>

        <summary type="html">


            &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;article_content&quot;
            class=&quot;article_content csdn-tracking-statistics&quot; data-pid=&quot;blog&quot;


        </summary>

        <category term="Java" scheme="http://wjlfun.info/categories/Java/"/>


        <category term="Restful" scheme="http://wjlfun.info/tags/Restful/"/>

    </entry>

    <entry>
        <title>程序员的幽默</title>
        <link href="http://wjlfun.info/2016/01/16/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%B9%BD%E9%BB%98/"/>
        <id>http://wjlfun.info/2016/01/16/程序员的幽默/</id>
        <published>2016-01-15T16:00:00.000Z</published>
        <updated>2018-05-15T11:49:52.172Z</updated>

        <content type="html">
            <![CDATA[<script src="\assets\js\APlayer.min.js"> </script><div id="article_content" class="article_content csdn-tracking-statistics" data-pid="blog" data-mod="popu_307" data-dsm="post"><br>                    <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/htmledit_views-0a60691e80.css"><br>            <div class="htmledit_views"><br>                看了这些来自程序员的神回复，你就会明白，程序员是世界上最聪明、最具幽默感的一群人。<br>工作相关<br>0. 如果软件正在占领全世界，为什么程序员得不到尊重？<br>遍身罗绮者，不是养蚕人。<br>1. 中国大陆的盗版Windows系统都是怎么做出来的？<br>复制、粘贴。<br>2. 中国梦和美国梦的区别是什么？<br>中国梦.txt，美国梦.exe<br>3. 请用最简洁的语言描述我国fa lv。<br>754<br>4. 哪种编程能够永生？<br>除非你能一直续。<br>5.怎么翻译Linus Torvalds的这句「Talk is cheap. Show me the code」比较好？<br>屁话少说，放码过来。<br>6. Google Glass的启动命令：OK，Glass，中文翻译为什么最合适？<br>好的，镜哥哥。<br>7. 什么是递归？<br>古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知，致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。<br>8. 你见过最烂的设计是什么？<br>正反面永远一次插不对的 usb 接口设计<br>9. 哪款键盘用起来手感比较好？<br>这款。<img src="https://img-blog.csdn.net/20180511165101227?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JlbmJlbjA3Mjk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br><br><br><p>10. 作为一个程序员，自己的女票比自己代码力强是一种什么样的体验？</p><p><img src="https://img-blog.csdn.net/20180511165117398?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JlbmJlbjA3Mjk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""><br></p><br><br>11. 如果你是图灵测试者，你会问机器什么问题？<br>金坷垃好处都有啥？<br>12. 作为IT人员，你觉得什么工具能大大提高你的工作效率？<br>单身。<br>13. Android上能提高学习、工作效率的应用有哪些？<br>关机。<br>14. 在网吧写代码是怎样一种体验？<br>装完开发环境，重启，没了。<br>15. 为什么很多程序员、geek 都喜欢熬夜，而且在后半夜工作效率异常高？<br>一个姑娘问我，搞学术的为什么都睡得那么晚，难道只有到晚上才有灵感？不是，姑娘，搞学术不靠灵感，靠的是碌碌无为的白天引发的愧疚心。<br>程序员、Geek 们也是这样。<br>16. 单身程序狗解决了一个技术难题后没有妹子可以炫耀或夸一下自己怎么办？<br>现在你明白了吧，为什么那么多程序员要写技术博客。<br>17. 有哪些老鸟程序员知道而新手不知道的小技巧？<br>程序不等于数据结构加算法，而等于搜索引擎加英语。<br>18. 程序员的核心竞争力是什么？为什么？<br>“玩算法的码农，打拼靠蓝条，像是法师。数学就等于蓝条最大值，数学差，魔法值不高，很快就到瓶颈了。外语影响回蓝速度。经验和智力加急速和穿透的。不玩算法的码农，像是战士，打拼靠血条，体质加生命，精神加生命回复，经验和敏捷加急速和破甲。”<br>19. IT大牛是怎样炼成的？<br>记得初入公司时，写的代码乱七八糟，错误百出，bug连连，不仅项目经理骂我，其他同事也对我怨声载道。后来听朋友介绍，就报了一个培训班。经过1个月的刻苦学习，终于功夫不负有心人—他们都骂不过我了。<br>20. 会写脚本的程序员如何去阿里工作？<br>告诉面试官，我不吃月饼。<br>生活相关<br>21. 码农们最常说的谎言是什么？<br>// TODO<br>22. 程序员的优越感从何而来？感觉码农写代码并没有比修自行车高贵，那么为什么他们这么吊炸天？<br>码农也是你们叫的？<br>23. 你有哪些用计算机技能解决生活问题的经历？<br>（1）我认识一个大牛，他不喜欢洗袜子，又不喜欢袜子的臭味。他买了很多样式一样的袜子，把这些袜子放在地上，根据臭的程度，摆一个二叉堆。每天早上，他pop两只最“香”的袜子，穿上；晚上回到家，把袜子脱下来，push到堆里。某一天，top的袜子超过他的耐臭能力，全扔掉，买新的。<br>（2）写个死循环把笔记本的CPU和GPU占满，把出风口当吹风机吹头。<br>24. 突然想开一家程序员主题的餐馆，名字就叫程序员的菜，菜名就叫各种语言中的关键字，各位指点一哈，有前途没？<br>北京西直门嘉茂广场外面有很大一个招牌“mysql”,当年我就是好奇这家餐厅和“mysql”到底有啥关系才去这家韩国餐厅的，结果服务员告诉我那是“明月三千里”的缩写，我有种被忽悠的赶脚。<br>25. 如何让别人明白「学习或从事计算机专业的人不一定会修电脑」？<br>我是学法学的是不是要搓个火球给你看阿？<br>26. 如何反驳「程序员离开电脑就是废物」这个观点？<br>不不不，很多程序员在电脑前也是废物。<br>27. 为什么程序员无论到哪儿都喜欢背电脑包，哪怕里面没有装电脑？<br>因为他们没有别的包。<br>28. 程序员都有哪些强迫症行为？<br>乘电梯的时候看着电梯的按钮面板（UI）常常会开始思考电梯的调度算法，然后仔细一想好像状态挺多的，多个实例之间状态可以互相影响，还涉及到一些优先级、加速度、预判方面的东西，仔细想想其实挺复杂的，然后还没等到出电梯就放弃了。然后不知道哪次坐又会望着面板开始想。<br>29. 发呆是一种生理需求吗？<br>其实是删除缓存文件加整理磁盘碎片<br>30. 什么时候感觉过你的心是凉的？<br>文件没保存<br>31. 如何回复程序员发来的短信：「Hello world」？<br>hello nerd.<br>32. 程序员的鄙视链是什么？<br>老婆漂亮的程序员，鄙视老婆不漂亮的程序员。<br>有老婆的程序员，鄙视没有老婆的程序员。<br>没有老婆有女朋友的程序员，鄙视单身程序狗。<br>在单身狗之间，才有语言、编辑器和操作系统的互相鄙视。<br>33. 程序员女朋友如何给程序员男朋友过生日？<br>告诉他，接口已经准备好了。<br>34. 女票允许我出轨，并且还介绍她闺密给我认识。在她真的很爱我的前提下，该如何理解她的行为？<br>千万不要上当！！！Mac告诉你，我也可以装windows哦，但你真的装了，会用高发热来报复你的！<br>35. 分手100天了，还没有走出来怎么办？<br>替换文件永远比删除文件更彻底。<br>36. 程序员夫妻结婚戒指刻什么字好？<br>0 error 0 warning<br>37. 乞求代码没有bug，该拜哪个神仙？<br>拜雍正，专治八阿哥。<br>38. 产品死了，如何安葬？<br>开源。<br>娱乐相关<br>39.《微微一笑很倾城》中的大四刚毕业的计算机水平是现实中能够达到的吗？电视剧中肖奈精通软件制作（这是小case了），精通黑客技术（打破世界级比赛记录），写的了游戏引擎（领先业内水平），精通算法优化。<br>我也是IT刚毕业学生，前端er一枚。说实话整个剧中被肖奈的水平震惊了，连女演员好不好看都顾不得了。且不说剧情，这个水平是一个大四学生能够具备的吗。我对自己产生了深深的怀疑。<br>（1）你怎么不问男主的长相是一个大四学生所具备的吗。<br>（2）大四有这个技术水平的，肯定没有那么多头发。<br>40. 为什么圣斗士每次出招前都要大喊一声招式？<br>函数要先声明，然后才能调用。<br>41. 为何诸葛亮常年拿一个羽毛扇？<br>跟CPU上必须装风扇是一个道理。<br>42. 苹果是宗教吗？<br>是！并且教内有这样一个传说：任何人只要卖两个肾去买iphone就能见到教主。<br><p>43. 罗永浩提出的锤子超过苹果的时间表大概是怎么样的？</p><p>家祭无忘告乃翁<img src="https://img-blog.csdn.net/20180511165053971?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JlbmJlbjA3Mjk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p>            </div><br>                </div>]]></content>

        <summary type="html">


            &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;article_content&quot;
            class=&quot;article_content csdn-tracking-statistics&quot; data-pid=&quot;blog&quot;


        </summary>

        <category term="Java" scheme="http://wjlfun.info/categories/Java/"/>


        <category term="程序员" scheme="http://wjlfun.info/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>

    </entry>

    <entry>
        <title>Struts2</title>
        <link href="http://wjlfun.info/2015/12/17/struts2/"/>
        <id>http://wjlfun.info/2015/12/17/struts2/</id>
        <published>2015-12-16T16:00:00.000Z</published>
        <updated>2018-02-02T00:15:16.279Z</updated>

        <content type="html">
            <![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="Struts2"><a href="#Struts2" class="headerlink" title="Struts2"></a>Struts2</h1><h2 id="一、框架概述"><a href="#一、框架概述" class="headerlink" title="一、框架概述"></a>一、框架概述</h2><p>什么是框架，为什么使用框架，框架优点<br>框架（framework）是一个基本概念上的结构，用于去解决或者处理复杂的问题<br>框架，即framework。其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统。简单说就是使用别人搭好的舞台，你来做表演。<br>框架是在特定的领域内解决问题。<br>优点<br>重用代码大大增加，软件生产效率和质量也得到了提高<br>使用框架开发，它提供统一的标准，大大降低了我们的后期维护。<br>学习框架重点:了解框架做了什么，我们要在这个基础上在做什么事情。</p><h2 id="二、java开发中常用框架"><a href="#二、java开发中常用框架" class="headerlink" title="二、java开发中常用框架"></a>二、java开发中常用框架</h2><p>SSH   (SSM  SSI)<br>SSH  struts2  spring  hibernate<br>SSM(SSI) springmvc spring mybatis(ibatis)</p><p>SSH 它是企业开发中比较主流的一套架构。<br>SSH框架在开发中所处的位置:</p><h2 id="三、Struts2框架介绍"><a href="#三、Struts2框架介绍" class="headerlink" title="三、Struts2框架介绍"></a>三、Struts2框架介绍</h2><p>什么是struts2框架，学习struts2框架的核心。<br>Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互<br>Struts2=struts1+webwork</p><p>问题:struts2是一个mvc框架，它的mvc是什么?</p><p>javaweb开发中的mvc,是在jsp的model2模式中提过<br>Model——javabean<br>View——–jsp<br>Controller—-servlet</p><p>核心点:<br>1.拦截器 interceptor<br>2.Action<br>3.ognl与valueStack</p><p>在现在开发中与struts2比较类似的框架有哪些?<br>Struts1  webwork  springmvc  jsf</p><p>Struts2框架流程</p><h2 id="四、Struts2框架执行流程"><a href="#四、Struts2框架执行流程" class="headerlink" title="四、Struts2框架执行流程"></a>四、Struts2框架执行流程</h2><p>1．Struts2源码导入</p><p>对于struts2框架它的源代码我们主要使用三部分<br>1.struts2核心部分源代码  org.apache.struts2xx<br>src\core\src\main\java<br>2.struts2的xwork核心部分源代码<br>src\xwork-core\src\main\java\com\opensymphony\xwork2<br>3.struts2的插件的源代码<br>src\plugins<br>2．关于struts.xml配置文件中提示问题<br>第一步<br>在eclipse的window下首选面中查找xml catalog<br>第二步<br>Location:配置本地的dtd文件路径<br>key type:选择URI<br>Key: <a href="http://struts.apache.org/dtds/struts-2.3.dtd" target="_blank" rel="noopener">http://struts.apache.org/dtds/struts-2.3.dtd</a><br>注意版本要对应，如果你可以上网，那么会自动缓存dtd,具有提示功能。</p><p>3．执行流程介绍<br>1.当通过浏览器发送一个请求<br>2.会被StrutsPrepareAndExecuteFilter拦截<br>3.会调用strtus2框架默认的拦截器(interceptor)完成部分功能<br>4.在执行Action中操作<br>5.根据Action中方法的执行结果来选择来跳转页面Resutl视图</p><p>一般管StrutsPrepareAndExecuteFilter 叫做前端控制器(核心控制器)，只有配置了这个filter我们的strtus2框架才能使用。<br>Strtus2的默认拦截器(interceptor)它们是在struts-default.xml文件中配置<br>注意:这上xml文件是在strtus-core.jar包中。<br>默认的拦截器是在defaultStack中定义的。</p><h2 id="五、Struts2配置详解"><a href="#五、Struts2配置详解" class="headerlink" title="五、Struts2配置详解"></a>五、Struts2配置详解</h2><p>1．Struts2配置文件加载顺序</p><p>第一个加载的是default.properties文件<br>位置:strtus2-core.jar包   org.apache.struts2包下<br>作用:主要是声明了struts2框架的常量<br>第二个加载的是一批配置文件<br>Strtus-default.xml<br>位置:struts2-corl.jar<br>作用:声明了interceptor  result  bean<br>Strtus-plugin.xml<br>位置:在strtus2的插件包中<br>作用:主要用于插件的配置声明<br>Strtus.xml<br>位置:在我们自己的工程中<br>作用:用于我们自己工程使用strtus2框架的配置<br>第三个加载的是自定义的strtus.properties<br>位置:都是在自己工程的src下<br>作用:定制常量<br>第四自定义配置提供<br>第五加载的是web.xml配置文件<br>主要是加载strtus2框架在web.xml文件中的相关配置.<br>第六 bean相关配置</p><p>重点掌握:<br>1.Default.properties<br>2.Struts-default.xml<br>3.Struts-plugin.xml<br>4.Strtus.xml<br>5.web.xml</p><p>2．struts.xml文件配置介绍<br>2.1．package配置<br>1.name属性  作用:定义一个包的名称，它必须唯一。<br>2.namespace属性 作用:主要是与action标签的name属性联合使用来确定一个action    的访问路径<br>3.extends属性 作用:指定继承自哪个包。一般值是strtus-default<br>        strtus-default包是在strtus-default.xml文件中声明的。<br>4.abstruct属性 它代表当前包是一个抽象的，主要是用于被继承<br>2.2．action配置<br>1.name属性 作用:主要是与package的namespace联合使用来确定一个action的访问路    径<br>2.class属性  作用:用于指示当前的action类<br>3.method属性  作用:用于指示当前的action类中的哪个方法执行<br>2.3．result配置<br>它主要是用于指示结果视图<br>1.name属性 作用是与action类的method方法的返回值进行匹配，来确定跳转路径<br>2.type属性 作用是用于指定跳转方式<br>2.4．扩展<br>关于action配置中的class与method的默认值以及result中的name与type 默认值问题</p><p>原因:strtus-default.xml文件中配置</p><p>它的作用就是当一个请求来时，如果查找不到指定的class及对应的method就会执行<br>ActionSupport类中的execute方法。<br>在这个类的execute方法中默认返回的是”success”<br>也就是说，result的name属性默认值是success,默认的跳转方式是请求转发 dispatcher</p><p>3．常量配置<br>default.properties文件中定义了struts2框架常用常量 .<br>问题:我们怎样可以定义常量<br>1.可以在src下创建一个strtus.properties配置文件<br>2.可以在web.xml文件中配置<br>3.可以直接在strtus.xml文件中定义常量 (推荐)</p><p>注意:后加载的配置文件中的常量会将先加载的常量覆盖</p><h2 id="六、Struts2的Action详解"><a href="#六、Struts2的Action详解" class="headerlink" title="六、Struts2的Action详解"></a>六、Struts2的Action详解</h2><p>Struts2中的action，主要是完成业务逻辑操作。Action替代在servlet中完成的作用。<br>Action的学习主要有两点<br>1.如何创建一个struts2的action<br>2.如果访问一个struts2的action</p><p>1．Action类创建方式(三种)<br>1.创建一个pojo类<br>Pojo(plani Ordinary java object)简单的java对象<br>Pojo类就是没有实现任何接口没有继承任何类<br>优点:无耦合<br>缺点:所有的功能都要自己完成</p><p>2.创建一个类实现一个Action接口<br>com.opensymphony.xwork2.Action</p><p>在Action接口中定义了五个常量，一个execute方法<br>五个常量:它们是默认的五个结果视图<result name="””">:<br>ERROR : 错误视图<br>INPUT: 它是struts2框架中interceptor中发现问题后会访问的一个视图<br>LOGIN:它是一个登录视图，可以在权限操作中使用<br>NONE:它代表的是null,什么都不做（也不会做跳转操作）<br>SUCCESS:这是一个成功视图<br>优点：耦合度低<br>缺点:还是需要自己来完成功能</result></p><p>3.创建一个类继承ActionSupport类<br>com.opensymphony.xwork2.ActionSupport<br>ActionSupport类也实现了Action接口。<br>我们在开发中一般会使用这种方案:<br>优点:具有丰富的功能，例如  表单校验 错误信息设置  国际化<br>缺点:耦合度高<br>2．action的访问方式<br>1.直接通过<action>标签来配置，通过method来指定访问的方法，如果method没有，默认访问的是execute方法。<br>2.简化的action访问方式，可以使用<em>通配符来访问。<br>这种方式的缺点:不建议使用过多的</em>号，它带来程序阅读障碍，不便于理解<br>使用*来简化操作方案，它对名称规范必须进行一个统一。</action></p><p>3．扩展–动态方法调用</p><p>这是strtus2提供的动态方法调用。</p><p>注意:对于strtus2的动态方法调用，要想使用我们必须配置一个常量来开启动态方法调用</p><p>这代表动态方法调用没有开启</p><p>个人不建议使用动态方法调用</p><h2 id="七、Struts2框架封装数据"><a href="#七、Struts2框架封装数据" class="headerlink" title="七、Struts2框架封装数据"></a>七、Struts2框架封装数据</h2><p>主要解决的问题:是在action中如果获取请求参数</p><p>主要有两种方式:<br>1.属性驱动<br>a.直接在action类中提供与请求参数匹配属性，提供get/set方法<br>b.在action类中创始一个javaBean,对其提供get/set ，在请求时页面上要进行修改，      例如 user.username  user.password ,要使用ognl表达式<br>以上两种方式的优缺点:<br>第一种比较简单，在实际操作我们需要将action的属性在赋值给模型(javaBean)    去操作<br>    第二种:不需要在直接将值给javaBean过程，因为直接将数据封装到了javaBean    中。它要求在页面上必须使用ognl表达式，就存在页面不通用问题。</p><p>2.模型驱动<br>步骤:<br>1.让Action类要实现一个指定接口ModelDriven<br>2.实例化模型对象(就是要new出来javaBean)<br>3.重写getModel方法将实例化的模型返回。</p><p>对于模型驱动它与属性驱动对比，在实际开发中使用比较多，模型驱动缺点，它只能对    一个模型数据进行封装。</p><h2 id="八、总结"><a href="#八、总结" class="headerlink" title="八、总结"></a>八、总结</h2><p>1.关于strtus2框架的环境搭建<br>2.关于strtus2框架配置<br>3.关于strtus2框架请求参数封装<br>4.关于strtus2框架的路径跳转</p><p>关于action访问的配置</p><package name="””" namespace="””" extends="””"><br><action name="””" class="””" method="””"><br><result name="””" type="””">路径</result><br></action><br></package><p>关于路径跳转问题:<br>是通过<result>来配置跳转的路径.<br>它的name属性是与action中的方法的返回值进行对比的。<br>它的type属性可以取哪些值?</result></p><p>默认值是dispatcher 它代表的是请求转发。针对于jsp页面<br>redirect  它代表的是重定向   针对于jsp页面<br>chain  它类似于请示转发，只不过它是针对于action跳转.<br>redirectAction 它类似于重定向  针对于action<br>关于路径跳转的配置<br>可以直接在<package>下创建全局的result</package></p>]]></content>

        <summary type="html">


            &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Struts2&quot;&gt;&lt;a
            href=&quot;#Struts2&quot; class=&quot;headerlink&quot; title=&quot;Struts2&quot;&gt;&lt;/a&gt;Struts2&lt;/h1&gt;&lt;h2


        </summary>

        <category term="Java" scheme="http://wjlfun.info/categories/Java/"/>


        <category term="Struts2" scheme="http://wjlfun.info/tags/Struts2/"/>

    </entry>

    <entry>
        <title>浏览器插件的使用教程</title>
        <link href="http://wjlfun.info/2015/09/23/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
        <id>http://wjlfun.info/2015/09/23/浏览器插件的使用教程/</id>
        <published>2015-09-22T16:00:00.000Z</published>
        <updated>2018-01-28T13:28:26.012Z</updated>

        <content type="html">
            <![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="浏览器插件的使用教程"><a href="#浏览器插件的使用教程" class="headerlink" title="浏览器插件的使用教程"></a>浏览器插件的使用教程</h1><h2 id="安装油猴插架"><a href="#安装油猴插架" class="headerlink" title="安装油猴插架"></a>安装油猴插架</h2><ul><li>[下载安装][<a href="http://www.tampermonkey.net" target="_blank" rel="noopener">http://www.tampermonkey.net</a>]</li><li>选择和你浏览器对应的插架，如下图<br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031141_995.png" alt=""></li><li>安装成功后可以在浏览器插件（扩展）中看到油猴，如下图<br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031143_316.png" alt=""></li></ul><h2 id="使用油猴安装插件"><a href="#使用油猴安装插件" class="headerlink" title="使用油猴安装插件"></a>使用油猴安装插件</h2><ul><li>点击油猴图标可以打开油猴的控制面板，如下图<br>   <img src="http://os4z8t7lb.bkt.clouddn.com/201709031145_947.png" alt=""></li><li>点击[获取新脚本][<a href="http://tampermonkey.net/scripts.php" target="_blank" rel="noopener">http://tampermonkey.net/scripts.php</a>]</li><li>选择脚本网站，推荐使用<a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">GreasyFork</a><br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031147_863.png" alt=""></li></ul><h2 id="选择要安装的脚本"><a href="#选择要安装的脚本" class="headerlink" title="选择要安装的脚本"></a>选择要安装的脚本</h2><ul><li>在首页点击脚本列表<br>   <img src="http://os4z8t7lb.bkt.clouddn.com/201709031149_210.png" alt=""></li><li>选择你需要的脚本点击安装<br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031150_460.png" alt=""></li><li>点击进行安装，如下图<br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031152_320.png" alt=""><br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031938_626.png" alt=""></li><li>安装成功后可以在油猴面板查看<br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031527_545.png" alt=""><br>  <img src="http://os4z8t7lb.bkt.clouddn.com/201709031529_999.png" alt=""><blockquote><p>插件可根据自己的需求安装，在脚本列表中可以看到很多有意思的插件</p></blockquote></li></ul><h2 id="举例：查看VIP视频"><a href="#举例：查看VIP视频" class="headerlink" title="举例：查看VIP视频"></a>举例：查看VIP视频</h2><ol><li>安装<code>VIP视频在线解析</code>插件</li><li>打开视频网站，播放视频，可看到插件，如下图<br> <img src="http://os4z8t7lb.bkt.clouddn.com/201709032010_638.png" alt="优酷网站"><br> <img src="http://os4z8t7lb.bkt.clouddn.com/201709032016_912.png" alt="爱奇艺"><br> <img src="http://os4z8t7lb.bkt.clouddn.com/201709032020_721.png" alt="腾讯视频"><blockquote><p>解析VIP 视频的插件很多，选一个可以用的即可，也可以安装多个<br>插件的作用只是</p></blockquote></li></ol>]]></content>

        <summary type="html">


            &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;浏览器插件的使用教程&quot;&gt;&lt;a
            href=&quot;#浏览器插件的使用教程&quot; class=&quot;headerlink&quot; title=&quot;浏览器插件的使用教程&quot;&gt;&lt;/a&gt;浏览器插件的


        </summary>

        <category term="Life" scheme="http://wjlfun.info/categories/Life/"/>


        <category term="浏览器插件" scheme="http://wjlfun.info/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"/>

    </entry>

    <entry>
        <title>Linux</title>
        <link href="http://wjlfun.info/2015/09/21/Linux/"/>
        <id>http://wjlfun.info/2015/09/21/Linux/</id>
        <published>2015-09-20T16:00:00.000Z</published>
        <updated>2018-01-30T05:57:23.092Z</updated>

        <content type="html">
            <![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h1 id="Linux学习"><a href="#Linux学习" class="headerlink" title="Linux学习"></a>Linux学习</h1><h2 id="初学者必备"><a href="#初学者必备" class="headerlink" title="初学者必备"></a>初学者必备</h2><ol><li>Linux常用命令</li></ol><h3 id="01-Linux的简介-avi"><a href="#01-Linux的简介-avi" class="headerlink" title="01-Linux的简介.avi"></a>01-Linux的简介.avi</h3><p>什么是Linux<br>Linux是基于Unix的,是一种自由和开放源码的操作系统，存在着许多不同的Linux版本，但它们都使用了Linux内核。<br>Linux的应用<br>服务器系统: Web应用服务器、数据库服务器、接口服务器、DNS、FTP等等<br>嵌入式系统: 路由器、防火墙、手机、PDA、IP 分享器、交换器、家电用品的微电脑控制器等等<br>高性能运算、计算密集型应用 Linux有强大的运算能力<br>桌面应用系统<br>移动手持系统<br>Linux的主流版本<br>Ubuntu, Centos, redhat, fedora, freebsd…</p><h3 id="02-虚拟软件的安装-avi"><a href="#02-虚拟软件的安装-avi" class="headerlink" title="02-虚拟软件的安装.avi"></a>02-虚拟软件的安装.avi</h3><p>安装参考《虚拟软件vmware安装.doc》</p><h3 id="03-CentOS的安装-avi"><a href="#03-CentOS的安装-avi" class="headerlink" title="03-CentOS的安装.avi"></a>03-CentOS的安装.avi</h3><p>参考《CentOS6详细安装文档.doc》</p><h3 id="04-Linux的目录结构-avi"><a href="#04-Linux的目录结构-avi" class="headerlink" title="04-Linux的目录结构.avi"></a>04-Linux的目录结构.avi</h3><p><img src="http://os4z8t7lb.bkt.clouddn.com/201801222253_456.png" alt=""></p><h3 id="05-Linux的常用命令：cd命令-avi"><a href="#05-Linux的常用命令：cd命令-avi" class="headerlink" title="05-Linux的常用命令：cd命令.avi"></a>05-Linux的常用命令：cd命令.avi</h3><p>==切换目录==<br><code>cd app</code> 切换到app目录<br><code>cd ..</code> 切换到上一层目录<br><code>cd /</code> 切换到系统根目录<br><code>cd ~</code> 切换到用户主目录<br><code>cd -</code> 切换到上一个所在目录</p><h3 id="06-Linux的常用命令：ls、ll、dir命令-avi"><a href="#06-Linux的常用命令：ls、ll、dir命令-avi" class="headerlink" title="06-Linux的常用命令：ls、ll、dir命令.avi"></a>06-Linux的常用命令：ls、ll、dir命令.avi</h3><p>==列出文件列表==<br>ls(list)是一个非常有用的命令，用来显示当前目录下的内容。配合参数的使用，能以不同的方式显示目录内容<br>格式：ls[参数] [路径或文件名]</p><p>在linux中以 <code>.</code> 开头的文件都是隐藏的文件<br><code>ls</code><br><code>ls -a</code>  显示所有文件或目录（包含隐藏的文件）<br><code>ls -l</code>  缩写成ll</p><h3 id="07-Linux的常用命令：mkdir、rmdir命令-avi"><a href="#07-Linux的常用命令：mkdir、rmdir命令-avi" class="headerlink" title="07-Linux的常用命令：mkdir、rmdir命令.avi"></a>07-Linux的常用命令：mkdir、rmdir命令.avi</h3><p>==创建目录==<br><code>mkdir app</code> 在当前目录下创建app目录<br><code>mkdir –p app2/test</code> 级联创建aap2以及test目<br>==移除目录==<br><code>rmdir(remove directory)</code>命令可用来删除“空”的子目录<br><code>rmdir app</code>  删除app目录</p><h3 id="08-Linux的常用命令：cat、more、less、tail命令-avi"><a href="#08-Linux的常用命令：cat、more、less、tail命令-avi" class="headerlink" title="08-Linux的常用命令：cat、more、less、tail命令.avi"></a>08-Linux的常用命令：cat、more、less、tail命令.avi</h3><p>浏览文件</p><p><code>cat</code> 用于显示文件的内容<br>格式：cat[参数]&lt;文件名&gt;<br><code>cat yum.conf</code></p><p><code>more</code> 一般用于要显示的内容会超过一个画面长度的情况。按空格键显示下一个画面。回车显示下一行内容。按 q 键退出查看。<br><code>more yum.conf</code> 空格显示下一页数据  回车显示下一行的数据</p><p><code>less</code> 用法和<code>more</code>类似，不同的是less可以通过PgUp、PgDn键来控制<br><code>less yum.conf</code>  PgUp 和 PgDn 进行上下翻页.</p><p><code>tail</code>命令是在实际使用过程中使用非常多的一个命令，它的功能是：用于显示文件后几行的内容。<br>==<code>tail -10 /etc/passwd</code>  查看后10行数据==<br><code>tail -f catalina.log</code>  ==动态查看日志==<br><code>ctrl+c</code> 结束查看</p><h3 id="09-Linux的常用命令：rm命令-avi"><a href="#09-Linux的常用命令：rm命令-avi" class="headerlink" title="09-Linux的常用命令：rm命令.avi"></a>09-Linux的常用命令：rm命令.avi</h3><p>==文件删除操作==<br><code>rm</code>  删除文件<br><code>rm a.txt</code>  删除a.txt文件<br>删除需要用户确认，y/n rm 删除不询问<br><code>rm -f a.txt</code>  不询问，直接删除 rm 删除目录<br><code>rm -r a</code>  递归删除<br>不询问递归删除（慎用）<br><code>rm -rf  a</code>  不询问递归删除<br><code>rm -rf *</code>    删除所有文件<br><code>rm -rf /*</code>   自杀</p><h3 id="10-Linux的远程连接：CRT的软件的安装和使用-avi"><a href="#10-Linux的远程连接：CRT的软件的安装和使用-avi" class="headerlink" title="10-Linux的远程连接：CRT的软件的安装和使用.avi"></a>10-Linux的远程连接：CRT的软件的安装和使用.avi</h3><h3 id="11-Linux的常用命令：cp、mv命令-avi"><a href="#11-Linux的常用命令：cp、mv命令-avi" class="headerlink" title="11-Linux的常用命令：cp、mv命令.avi"></a>11-Linux的常用命令：cp、mv命令.avi</h3><p>文件的拷贝和剪切<br>cp(copy)命令可以将文件从一处复制到另一处。一般在使用cp命令时将一个文件复制成另一个文件或复制到某目录时，需要指定源文件名与目标文件名或目录。<br><code>cp a.txt b.txt</code>   将a.txt复制为b.txt文件<br><code>cp a.txt ../</code>     将a.txt文件复制到上一层目录中 </p><p>mv 移动或者重命名<br><code>mv a.txt ../</code>   将a.txt文件移动到上一层目录中<br><code>mv a.txt b.txt</code> 将a.txt文件重命名为b.txt</p><h3 id="12-Linux的常用命令：tar命令-avi"><a href="#12-Linux的常用命令：tar命令-avi" class="headerlink" title="12-Linux的常用命令：tar命令.avi"></a>12-Linux的常用命令：tar命令.avi</h3><p>==打包或者解压==<br>tar命令位于/bin目录下，它能够将用户所指定的文件或目录打包成一个文件，但不做压缩。<br>一般Linux上常用的压缩方式是选用tar将许多文件打包成一个文件，再以gzip压缩命令压缩成xxx.tar.gz(或称为xxx.tgz)的文件。<br>常用参数：<br><code>-c:</code>创建一个新tar文件<br><code>-v:</code>显示运行过程的信息<br><code>-f:</code>指定文件名<br><code>-z:</code>调用gzip压缩命令进行压缩<br><code>-t:</code>查看压缩文件的内容<br><code>-x:</code>解开tar文件</p><p>==打包==<br><code>tar –cvf xxx.tar ./*</code><br>打包并且压缩：<br><code>tar –zcvf xxx.tar.gz ./*</code></p><p>==解压==<br><code>tar –xvf xxx.tar</code><br><code>tar -xvf xxx.tar.gz -C /usr/aaa</code></p><h3 id="13-Linux的常用命令：grep命令-avi"><a href="#13-Linux的常用命令：grep命令-avi" class="headerlink" title="13-Linux的常用命令：grep命令.avi"></a>13-Linux的常用命令：grep命令.avi</h3><p>grep命令<br>查找符合条件的字符串<br>用法: grep [选项]… PATTERN [FILE]…<br>示例：<br><code>grep lang anaconda-ks.cfg</code>  在文件中查找lang<br><code>grep lang anaconda-ks.cfg –color</code> 高亮显示</p><h3 id="14-Linux的常用命令：其他常用命令-avi"><a href="#14-Linux的常用命令：其他常用命令-avi" class="headerlink" title="14-Linux的常用命令：其他常用命令.avi"></a>14-Linux的常用命令：其他常用命令.avi</h3><p>其他常用命令<br><code>pwd</code> 显示当前所在目录<br><code>touch</code> 创建一个空文件<br><code>touch a.txt</code><br><code>ll -h</code> 友好显示文件大小<br><code>wget</code> 下载资料 <code>wget http://nginx.org/download/nginx-1.9.12.tar.gz</code></p><h3 id="15-Linux的常用命令：VI和VIM编辑器-avi"><a href="#15-Linux的常用命令：VI和VIM编辑器-avi" class="headerlink" title="15-Linux的常用命令：VI和VIM编辑器.avi"></a>15-Linux的常用命令：VI和VIM编辑器.avi</h3><p>==Vi和Vim编辑器==<br>在Linux下一般使用vi编辑器来编辑文件<br>vi既可以查看文件也可以编辑文件<br>三种模式：命令行、插入、底行模式<br>切换到命令行模式：按Esc键<br>切换到插入模式：按 i 、o、a键<br><code>i</code> 在当前位置生前插入<br><code>I</code> 在当前行首插入<br><code>a</code> 在当前位置后插入<br><code>A</code> 在当前行尾插入<br><code>o</code> 在当前行之后插入一行<br><code>O</code> 在当前行之前插入一行</p><p>切换到底行模式：按 <code>:</code>（冒号）</p><p>打开文件：<code>vim file</code><br>退出：<code>esc :q</code><br>修改文件：输入<code>i</code>进入插入模式<br>保存并退出：<code>esc :wq</code><br>不保存退出：<code>esc :q!</code></p><h3 id="16-Linux的常用命令：重定向输出-avi"><a href="#16-Linux的常用命令：重定向输出-avi" class="headerlink" title="16-Linux的常用命令：重定向输出.avi"></a>16-Linux的常用命令：重定向输出.avi</h3><p><code>&gt;</code>  重定向输出，覆盖原有内容<br><code>&gt;&gt;</code> 重定向输出，又追加功能</p><p><code>cat /etc/passwd &gt; a.txt</code>  将输出定向到a.txt中<br><code>cat /etc/passwd &gt;&gt; a.txt</code>  输出并且追加</p><p><code>ifconfig &gt; ifconfig.txt</code></p><h3 id="17-Linux的常用命令：管道和命令执行控制-avi"><a href="#17-Linux的常用命令：管道和命令执行控制-avi" class="headerlink" title="17-Linux的常用命令：管道和命令执行控制.avi"></a>17-Linux的常用命令：管道和命令执行控制.avi</h3><p>管道是Linux命令中重要的一个概念，其作用是将一个命令的输出用作另一个命令的输入</p><p><code>ls --help | more</code>  分页查询帮助信息<br><code>ps –ef | grep java</code>  查询名称中包含java的进程<br><code>ifconfig | more</code><br><code>cat index.html | more</code><br><code>ps –ef | grep aio</code></p><p>命令控制<br>命令之间使用 <code>&amp;&amp;</code> 连接，实现逻辑与的功能<br>只有在 <code>&amp;&amp;</code> 左边的命令返回真,<code>&amp;&amp;</code> 右边的命令才会被执行<br>只要有一个命令返回假,后面的命令就不会被执行。<br><code>mkdir test &amp;&amp; cd test</code></p><h3 id="18-Linux的常用命令：网络通讯的命令-avi"><a href="#18-Linux的常用命令：网络通讯的命令-avi" class="headerlink" title="18-Linux的常用命令：网络通讯的命令.avi"></a>18-Linux的常用命令：网络通讯的命令.avi</h3><p>网络通讯命令<br><code>ifconfig</code>  显示或设置网络设备<br><code>ifconfig eth0 up</code> 启用eth0网卡<br><code>ifconfig eth0 down</code>  停用eth0网卡 ping   探测网络是否通畅。<br><code>ping 192.168.0.1 netstat</code> 查看网络端口。<br><code>netstat -an | grep 3306</code> 查询3306端口占用情况</p><h3 id="19-Linux的常用命令：系统管理的命令-avi"><a href="#19-Linux的常用命令：系统管理的命令-avi" class="headerlink" title="19-Linux的常用命令：系统管理的命令.avi"></a>19-Linux的常用命令：系统管理的命令.avi</h3><p>系统管理命令<br><code>date</code> 显示或设置系统时间<br><code>date</code>  显示当前系统时间<br><code>date -s “2014-01-01 10:10:10“</code>  设置系统时间 df 显示磁盘信息<br><code>df –h</code>  友好显示大小 free 显示内存状态<br><code>free –m</code> 以mb单位显示内存组昂头 top 显示，管理执行中的程序</p><p><code>clear</code> 清屏幕<br><code>ps</code> 正在运行的某个进程的状态<br><code>ps –ef</code>  查看所有进程<br><code>ps –ef | grep ssh</code> 查找某一进程 kill 杀掉某一进程<br><code>kill 2868</code>  杀掉2868编号的进程<br><code>kill -9 2868</code>  强制杀死进程</p><p><code>du</code> 显示目录或文件的大小<br><code>du –h</code> 显示当前目录的大小<br><code>who</code> 显示目前登入系统的用户信息<br><code>hostname</code> 查看当前主机名<br>修改：<code>vi /etc/sysconfig/network</code><br><code>uname</code> 显示系统信息。<br><code>uname -a</code> 显示本机详细信息<br>依次为：内核名称(类别)，主机名，内核版本号，内核版本，内核编译日期，硬件名，处理器类型，硬件平台类型，操作系统名称</p><h3 id="20-Linux的常用命令：用户管理的命令-avi"><a href="#20-Linux的常用命令：用户管理的命令-avi" class="headerlink" title="20-Linux的常用命令：用户管理的命令.avi"></a>20-Linux的常用命令：用户管理的命令.avi</h3><p>用户管理命令<br><code>useradd</code> 添加一个用户<br><code>useradd test</code> 添加test用户<br><code>useradd test -d /home/t1</code>  指定用户home目录<br><code>passwd</code>  设置、修改密码<br><code>passwd test</code>  为test用户设置密码</p><p>切换登录：<br><code>ssh -l test -p 22 192.168.19.128</code><br><code>su – 用户名</code><br><code>userdel</code> 删除一个用户<br><code>userdel test</code> 删除test用户(不会删除home目录)<br><code>userdel –r test</code>  删除用户以及home目录</p><h3 id="21-Linux的常用命令：组管理的命令-avi"><a href="#21-Linux的常用命令：组管理的命令-avi" class="headerlink" title="21-Linux的常用命令：组管理的命令.avi"></a>21-Linux的常用命令：组管理的命令.avi</h3><p>组管理命令<br>当在创建一个新用户user时，若没有指定他所属于的组，就建立一个和该用户同名的私有组<br>创建用户时也可以指定所在组<br><code>groupadd</code>  创建组<br><code>groupadd public</code>  创建一个名为public的组<br><code>useradd u1 –g public</code>  创建用户指定组 groupdel 删除组，如果该组有用户成员，必须先删除用户才能删除组。<br><code>groupdel public</code></p><h3 id="22-Linux的常用命令：权限管理-avi"><a href="#22-Linux的常用命令：权限管理-avi" class="headerlink" title="22-Linux的常用命令：权限管理.avi"></a>22-Linux的常用命令：权限管理.avi</h3><p>文件权限<br><img src="http://os4z8t7lb.bkt.clouddn.com/201801231353_92.png" alt=""><br>变更文件权限<br><code>chmod</code> 变更文件或目录的权限。<br><code>chmod 755 a.txt</code><br><code>chmod u=rwx,g=rx,o=rx a.txt</code><br><code>chmod 000 a.txt  / chmod 777 a.txt chown</code> ==变更文件或目录改文件所属用户和组==<br><code>chown u1:public a.txt</code> ：变更当前的目录或文件的所属用户和组<br><code>chown -R u1:public dir</code> ：变更目录中的所有的子目录及文件的所属用户和组</p>]]></content>

        <summary type="html">


            &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Linux学习&quot;&gt;&lt;a
            href=&quot;#Linux学习&quot; class=&quot;headerlink&quot; title=&quot;Linux学习&quot;&gt;&lt;/a&gt;Linux学习&lt;/h1&gt;&lt;h2


        </summary>

        <category term="Java" scheme="http://wjlfun.info/categories/Java/"/>


        <category term="Linux" scheme="http://wjlfun.info/tags/Linux/"/>

    </entry>

</feed>
